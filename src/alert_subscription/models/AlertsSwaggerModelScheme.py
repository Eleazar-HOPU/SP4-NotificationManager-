import apiflask.fields
from loguru import logger

from apiflask import Schema, fields
from apiflask.fields import String, Integer, List, Dict, Boolean, Raw
from apiflask.validators import Length, OneOf
# from marshmallow_toplevel import TopLevelSchema


class CreateSubscription(Schema):
    category = String(required=True, description='Category the user subscribes to')


class Subscription(CreateSubscription):
    id = String(required=True, description='Autogenerated id for identification')
    # category = String(required=True, description='Category the user subscribes to')
    active = Boolean(required=True, description='Describes if the subscription is active or not')


class UserSubscriptionList(Schema):
    user_id = List(fields.Nested(Subscription))


# TODO Fix this and replace below SubscriptionList Schema
# class SubscriptionList(TopLevelSchema):
#     _toplevel = fields.Nested(
#         Subscription,
#         required=True,
#         many=True
#     )
# schema = SubscriptionList()
# errors = schema.validate([{"id": "82bb0248-6ce3-4fe4-9e68-6c30fe0ef41b","category": "Agriculture","active": True}])
# assert not errors


class SubscriptionList(Schema):
    # _toplevel_field = fields.List(fields.Nested(Subscription), many=True)
    # subs = Subscription(many=True)
    fields.List(fields.Nested(Subscription), many=True,
                example=[
        {
            "id": "82bb0248-6ce3-4fe4-9e68-6c30fe0ef41b",
            "category": "Agriculture",
            "active": True
        }
    ])


